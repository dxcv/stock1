import util.jwtrade as jt
import alpha.Alpha191_3 as ap
import numpy as np
import util.jwdata as jd

def daily_callback(ctx):
    date = ctx.current_day

    # 调用国泰君安191因子库
    # hs300 = ['002470.SZ', '000540.SZ', '601021.SH', '600050.SH', '601788.SH', '600352.SH', '601166.SH', '002602.SZ', '002673.SZ', '601939.SH', '600031.SH', '600010.SH', '300251.SZ', '002241.SZ', '600115.SH', '600820.SH', '601669.SH', '000627.SZ', '002024.SZ', '600011.SH', '603160.SH', '002925.SZ', '601919.SH', '600030.SH', '600339.SH', '002085.SZ', '000568.SZ', '600100.SH', '601006.SH', '000723.SZ', '603858.SH', '601607.SH', '600297.SH', '000959.SZ', '300017.SZ', '601718.SH', '600660.SH', '000402.SZ', '002411.SZ', '600704.SH', '600688.SH', '601009.SH', '600025.SH', '603799.SH', '601838.SH', '601117.SH', '002385.SZ', '300070.SZ', '000063.SZ', '002027.SZ', '600157.SH', '600804.SH', '002625.SZ', '600606.SH', '002310.SZ', '601866.SH', '601169.SH', '600009.SH', '601668.SH', '601099.SH', '600118.SH', '000338.SZ', '600018.SH', '002739.SZ', '000768.SZ', '300072.SZ', '600487.SH', '600038.SH', '600519.SH', '600219.SH', '000630.SZ', '601186.SH', '601989.SH', '000503.SZ', '600489.SH', '601238.SH', '600900.SH', '000776.SZ', '002558.SZ', '000858.SZ', '600048.SH', '600177.SH', '600085.SH', '601958.SH', '601878.SH', '002065.SZ', '601818.SH', '601618.SH', '002608.SZ', '603993.SH', '002456.SZ', '601229.SH', '000413.SZ', '600271.SH', '601877.SH', '000826.SZ', '600089.SH', '601336.SH', '601901.SH', '600535.SH', '300015.SZ', '601899.SH', '601601.SH', '601633.SH', '600837.SH', '600958.SH', '600036.SH', '000538.SZ', '002202.SZ', '600977.SH', '600068.SH', '601012.SH', '600703.SH', '002415.SZ', '000792.SZ', '000898.SZ', '601398.SH', '000559.SZ', '600637.SH', '600887.SH', '601555.SH', '600690.SH', '600390.SH', '600061.SH', '001965.SZ', '600919.SH', '600176.SH', '601997.SH', '001979.SZ', '600583.SH', '000783.SZ', '600522.SH', '601108.SH', '000002.SZ', '600066.SH', '600816.SH', '600340.SH', '002252.SZ', '600516.SH', '600369.SH', '002008.SZ', '601225.SH', '000839.SZ', '000423.SZ', '600498.SH', '000069.SZ', '002294.SZ', '000623.SZ', '002081.SZ', '600436.SH', '600663.SH', '002508.SZ', '300122.SZ', '000415.SZ', '600109.SH', '002594.SZ', '000876.SZ', '601212.SH', '601991.SH', '601933.SH', '600570.SH', '601198.SH', '000725.SZ', '000961.SZ', '601611.SH', '601881.SH', '002450.SZ', '600795.SH', '600015.SH', '600276.SH', '601727.SH', '601155.SH', '002460.SZ', '600376.SH', '600438.SH', '600926.SH', '600332.SH', '600682.SH', '601216.SH', '600019.SH', '600208.SH', '600705.SH', '002624.SZ', '000895.SZ', '603833.SH', '601857.SH', '603260.SH', '000728.SZ', '002236.SZ', '002601.SZ', '601828.SH', '000786.SZ', '300003.SZ', '000938.SZ', '002142.SZ', '601377.SH', '600233.SH', '002468.SZ', '002230.SZ', '002044.SZ', '600111.SH', '601318.SH', '600028.SH', '002500.SZ', '601985.SH', '600188.SH', '002050.SZ', '601766.SH', '000100.SZ', '600518.SH', '601018.SH', '601333.SH', '600741.SH', '600372.SH', '600547.SH', '300027.SZ', '601800.SH', '600383.SH', '002007.SZ', '600016.SH', '002555.SZ', '601628.SH', '600104.SH', '600999.SH', '300433.SZ', '601808.SH', '601288.SH', '601111.SH', '000060.SZ', '600373.SH', '600029.SH', '600406.SH', '600221.SH', '600415.SH', '600549.SH', '600886.SH', '600809.SH', '000425.SZ', '601088.SH', '002493.SZ', '002714.SZ', '300136.SZ', '600008.SH', '600959.SH', '601888.SH', '002736.SZ', '300408.SZ', '002153.SZ', '600398.SH', '600023.SH', '601390.SH', '601328.SH', '000333.SZ', '600867.SH', '300033.SZ', '601211.SH', '600893.SH', '601600.SH', '300024.SZ', '600588.SH', '600196.SH', '603288.SH', '300059.SZ', '600674.SH', '000983.SZ', '002797.SZ', '002475.SZ', '600309.SH', '600000.SH', '002304.SZ', '002466.SZ', '000001.SZ', '601898.SH', '002352.SZ', '002074.SZ', '300124.SZ', '600585.SH', '601998.SH', '000651.SZ', '601688.SH', '600153.SH', '600909.SH', '000671.SZ', '300144.SZ', '600170.SH', '600482.SH', '002146.SZ', '000709.SZ', '000157.SZ', '600739.SH', '002572.SZ', '601992.SH', '000625.SZ', '601988.SH', '601228.SH', '601360.SH', '600362.SH', '600346.SH', '000166.SZ', '000963.SZ']

    hs300 = ['002470.SZ', '000540.SZ', '601021.SH', '600050.SH', '601788.SH', '600352.SH', '601166.SH', '002602.SZ',
             '002673.SZ', '601939.SH', '600031.SH', '600010.SH', '300251.SZ', '002241.SZ', '600115.SH', '600820.SH']

    # TODO window 的设置
    # gtja = ap.gtja_191(start_date=ctx.backtest_start_date, end_date=date, codes=hs300)
    gtja = ap.gtja_191(start_date='20190531', end_date=date, codes=hs300)
    # 选用第191号因子
    alpha = gtja.alpha_002()

    # 按照因子值排序
    sorted_alpha = alpha.sort_values(ascending=True, na_position='last')

    top10 = sorted_alpha.iloc[:5]

    # 进行买卖
    position_stocks = ctx.hold['code']  # 获取仓前持仓

    sell_stocks = position_stocks[~np.isin(position_stocks, np.array(top10.index))]

    buy_stocks = top10[~np.isin(top10.index, position_stocks)].index

    for s in list(sell_stocks):  # 卖出上一天持仓

        p = jd.get_price_panel([s], date, date)
        if p is None:
            print('数据异常？？？？？？？？？')
            return
        ctx.order_target_value(s, p['open'][s][0], 0)
    for s in list(buy_stocks):  # 取因子值前10调仓买入
        p = jd.get_price_panel([s], date, date)
        if p is None:
            print('数据异常？？？？？？？？？')
            return
        ctx.order_target_value(s, p['open'][s][0], 20000)

    return

if __name__ == '__main__':

    t = jt.Trade(backtest_start_date='20190603', backtest_end_date='20190701', try_all=True)

    # # 买入
    # t.order_target_value('000001.SZ', 13, 10000)
    # # 买入
    # t.order_target_value('000002.SZ', 5.5, 50000)
    # #买入
    # t.order_target_value('002185.SZ ', 53.1, 20000)
    # t.order_target_value('603997.SH', 2.3, 10000)


    t.run_daily(daily_callback)

    print(t.daily_capital)

    t.show()
